"use strict";var _extends=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])}return e},_graphqlYoga=require("graphql-yoga"),_users=[],pubsub=new _graphqlYoga.PubSub,typeDefs="\ntype Query {\n    users: [User!]!\n}\n\ntype Mutation {\n    addUser(data: AddUserInput): User!\n    deleteUser(who: String!): User!\n    updateUser(who: String!, data: UpdateUserInput): User!\n}\n\ninput AddUserInput {\n    name: String!, \n    age: Int!\n}\n\ninput UpdateUserInput {\n    name: String\n    age: Int\n}\n\ntype User {\n    name: String!\n    age: Int!\n}\n\ntype Subscription {\n    user: UserSubscription!\n}\n\nenum MutationType {\n    CREATED\n    UPDATED \n    DELETED\n}\n\ntype UserSubscription {\n    mutation: String!\n    data: User!\n}\n\n",resolvers={Query:{users:function(){return _users}},Mutation:{addUser:function(e,n,r,t){var s=_extends({},n.data);return _users.push(s),pubsub.publish("user",{user:{mutation:"Added",data:s}}),s},deleteUser:function(e,n,r,t){var s=_users.findIndex(function(e){return e.name.toLowerCase()===n.who.toLowerCase()});if(-1===s)throw new Error("User not found");var u=_users.splice(s,1);return pubsub.publish("user",{user:{mutation:"Deleted",data:u[0]}}),u[0]},updateUser:function(e,n,r,t){var s=_users.find(function(e){return e.name.toLowerCase()===n.who.toLowerCase()});if(!s)throw new Error("User not found");return"string"==typeof n.data.name&&(s.name=n.data.name),void 0!==n.data.age&&(s.age=n.data.age),pubsub.publish("user",{user:{mutation:"Updated",data:s}}),s}},Subscription:{user:{subscribe:function(e,n,r,t){return pubsub.asyncIterator("user")}}}},server=new _graphqlYoga.GraphQLServer({typeDefs:typeDefs,resolvers:resolvers});server.start(function(){return console.log("server running")});